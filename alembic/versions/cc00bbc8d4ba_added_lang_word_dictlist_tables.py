"""added lang, word, dictlist tables

Revision ID: cc00bbc8d4ba
Revises: b1637d28f51b
Create Date: 2025-10-20 21:38:28.978384

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cc00bbc8d4ba"
down_revision: str | Sequence[str] | None = "b1637d28f51b"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "language",
        sa.Column("code", sa.String(length=5), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("code", name=op.f("pk_language")),
    )
    op.create_table(
        "dictlist",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("lang_code", sa.String(length=5), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("max_words_limit", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lang_code"],
            ["language.code"],
            name=op.f("fk_dictlist_lang_code_language"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_dictlist_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_dictlist")),
    )
    op.create_table(
        "word",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("lang_code", sa.String(length=5), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("new_word", sa.String(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("translation", sa.String(), nullable=True),
        sa.Column("note", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["lang_code"], ["language.code"], name=op.f("fk_word_lang_code_language")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_word_user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_word")),
    )
    op.create_table(
        "dictlist_words",
        sa.Column("dictlist_id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dictlist_id"],
            ["dictlist.id"],
            name=op.f("fk_dictlist_words_dictlist_id_dictlist"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["word.id"],
            name=op.f("fk_dictlist_words_word_id_word"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("dictlist_id", "word_id", name="dictlist_word_pk"),
    )
    op.create_table(
        "wordcontext",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word_id", sa.Integer(), nullable=False),
        sa.Column("context", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["word_id"],
            ["word.id"],
            name=op.f("fk_wordcontext_word_id_word"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_wordcontext")),
    )
    op.add_column("user", sa.Column("created_at", sa.TIMESTAMP(), nullable=False))
    op.drop_column("user", "full_access_deadline")
    op.drop_column("user", "created")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "user",
        sa.Column(
            "full_access_deadline",
            postgresql.TIMESTAMP(),
            server_default=sa.text("(now() + '356 days'::interval)"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("user", "created_at")
    op.drop_table("wordcontext")
    op.drop_table("dictlist_words")
    op.drop_table("word")
    op.drop_table("dictlist")
    op.drop_table("language")
    # ### end Alembic commands ###
